name: Blog Automation

on:
  schedule:
    - cron: '0 */6 * * *'  # 6시간마다 실행 (수정: 별표 5개)
  workflow_dispatch:        # 수동 실행도 가능

jobs:
  collect-and-process:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        pip install feedparser requests beautifulsoup4
    
    - name: Run blog automation
      run: python blog_automation.py
    
    - name: Show collected posts (first 500 chars)
      run: |
        if [ -f collected_posts.json ]; then
          echo "=== 수집된 포스트 미리보기 ==="
          head -c 500 collected_posts.json
          echo ""
          echo "=== 파일 정보 ==="
          ls -la collected_posts.json
        else
          echo "collected_posts.json 파일이 생성되지 않았습니다."
        fi
    
    # Artifact로 파일 업로드 (다운로드 가능)
    - name: Upload collected posts as artifact
      uses: actions/upload-artifact@v4
      with:
        name: collected-posts
        path: collected_posts.json
        retention-days: 30
    
    # GitHub Pages용 파일도 생성 (웹에서 바로 확인 가능)
    - name: Create web-accessible file
      run: |
        mkdir -p public
        cp collected_posts.json public/
        echo "<html><body><h1>최신 수집 포스트</h1><pre>" > public/index.html
        cat collected_posts.json >> public/index.html
        echo "</pre></body></html>" >> public/index.html
        
    # GitHub Pages 배포 (선택사항)
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v4
      if: github.ref == 'refs/heads/main'
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./public
        
    # 이메일로 결과 전송 (선택사항)
    - name: Send email notification
      if: always()
      run: |
        echo "블로그 자동화 완료" > result.txt
        echo "실행 시간: $(date)" >> result.txt
        if [ -f collected_posts.json ]; then
          echo "수집된 포스트 수: $(cat collected_posts.json | grep -o '"title"' | wc -l)" >> result.txt
        fi
